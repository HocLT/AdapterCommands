/*
 * Copyright (c) 2016 Hannes Dorfmann
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'findbugs'

afterEvaluate {
  def variants = plugins.hasPlugin('com.android.application') ?
      android.applicationVariants : android.libraryVariants

  variants.each { variant ->
    def task = tasks.create("findBugs${variant.name.capitalize()}", FindBugs)

    task.group = 'verification'
    task.description = "Run FindBugs for the ${variant.description}."

    task.effort = 'max'

    task.reportLevel = 'high'
    task.reports {
      xml {
        enabled = false
      }
      html {
        enabled = true
      }
    }

    def variantCompile = variant.javaCompile

    task.classes = fileTree(variantCompile.destinationDir)
    task.source = variantCompile.source
    task.classpath = variantCompile.classpath.plus(project.files(android.bootClasspath))

    task.dependsOn(variantCompile)
    tasks.getByName('check').dependsOn(task)
  }
}